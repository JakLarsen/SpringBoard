/**
 * Patch jobs route
 * Patch jobs model
 * Patch jobs tests for both
 * 
 * Delete jobs route
 * Delete jobs model
 * Delete jobs tests for both
 * 
 * -Show jobs for a company in GET /companies/:handle now
 * Update model ^
 * 
 * Add application schemas
 * Add POST /users/:username/jobs/:id to apply for job (just return {applied: jobID})
 * Add apply() to User Model to be used in POST route
 * Tests for both
 * Give users/:username more return information including{..., applications: [jobID, jobID]}
 * 
 * 
 */



TODO:


10/8
 * DONE Patch jobs route
 * DONE Patch jobs model 
 * Patch jobs tests for both
 
 * Delete jobs route
 * Delete jobs model
 * Delete jobs tests for both
 * 
 * -Show jobs for a company in GET /companies/:handle now
 * Update model ^
 * 

 PART 5
 * Add application schemas
 * Add POST /users/:username/jobs/:id to apply for job (just return {applied: jobID})
 * Add apply() to User Model to be used in POST route
 * Tests for both
 * Give users/:username more return information including{..., applications: [jobID, jobID]}
 

 10/6
 - First half Part 4




9/30
Part 2:

In the GET /companies:
Allow filtering by query string, including:
    name="net" (if the name case-insensitive includes 'net' or 'Net').
    minEmployees=50 (return all companies that have >= 50 employees)
    maxEmployees=150 (return all companies that have <= 150 employees)
    using minEmployees and maxEmployees together, if minEmployees > maxEmployees:
        throw 400 error with appropriate message

    Do filtering within model - duh
    Make sure combinations of filters work - hmm

    Write tests

Reach out if you need help here 
Part 3: Change Authorization for Companies: 
    Part Three: Change Authorization
    Many routes for this site do not have appropriate authorization checks.

    Companies
        Retrieving the list of companies or information about a company should remain open to everyone, including anonymous users.
        Creating, updating, and deleting companies should only be possible for users who logged in with an account that has the is_admin flag in the database.
    Find a way to do this where you don’t need to change the code of these routes, and where you don’t need to SELECT information about the user on every request, but that the authentication credentials provided by the user can contain information suitable for this requirement.

    Update tests to demonstrate that these security changes are working.

    Users
        Creating users should only permitted by admins (registration, however, should remain open to everyone).
        Getting the list of all users should only be permitted by admins.
        Getting information on a user, updating, or deleting a user should only be permitted either by an admin, or by that user.
    As before, write tests for this carefully.